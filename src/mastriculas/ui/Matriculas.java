/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mastriculas.ui;

import java.util.List;
import matriculas.entity.Estudiante;
import matriculas.entity.Universidad;
import matriculas.util.HibernateUtil;
import org.hibernate.HibernateException;
import org.hibernate.Query;
import org.hibernate.Session;

/**
 *
 * DAM. Curso 2024-2025 Módulo: Acceso a datos. Unidad 1: Mapeo Objeto
 * Relacional.
 *
 * @author Ana Rodríguez González
 * @version 1.0 Fecha: 27-01-2025
 *
 */
public class Matriculas extends javax.swing.JFrame {

    /**
     * Creates new form Matriculas
     */
    public Matriculas() {
        initComponents();
        //Centra la ventana
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButtonListadoUniversidades = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTxtResultados = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jButtonListadoEstudiantes = new javax.swing.JButton();
        botonSalir = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jButtonAddUniversidad = new javax.swing.JButton();
        jButtonAddEstudiante = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        labelModificarEstudiante = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        botonElliminarUni = new javax.swing.JButton();
        botonEliminaEstudiante = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel7 = new javax.swing.JLabel();
        botonConsulta1 = new javax.swing.JButton();
        botonConsulta2 = new javax.swing.JButton();
        botonConsulta3 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 153, 153));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Base de datos <Matrículas>: ");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel1)
                .addContainerGap(25, Short.MAX_VALUE))
        );

        jButtonListadoUniversidades.setText("Listado Universidades");
        jButtonListadoUniversidades.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonListadoUniversidadesActionPerformed(evt);
            }
        });

        jTxtResultados.setColumns(20);
        jTxtResultados.setRows(5);
        jScrollPane1.setViewportView(jTxtResultados);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("¿Qué datos quieres consultar?");

        jButtonListadoEstudiantes.setText("Listado Estudiantes");
        jButtonListadoEstudiantes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonListadoEstudiantesActionPerformed(evt);
            }
        });

        botonSalir.setText("Salir");
        botonSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonSalirActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Añadir nuevos datos:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        jButtonAddUniversidad.setText("Añadir Universidad");
        jButtonAddUniversidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddUniversidadActionPerformed(evt);
            }
        });

        jButtonAddEstudiante.setText("Añadir Estudiante");
        jButtonAddEstudiante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddEstudianteActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel4.setText("Selecciona la acción que deseas realizar: ");

        labelModificarEstudiante.setText("Modifica el importe de matricula de un estudiante: ");

        jButton1.setText("Modificar matricula");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton1)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(jButtonAddUniversidad, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(42, 42, 42)
                            .addComponent(jButtonAddEstudiante, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jLabel4)
                        .addComponent(labelModificarEstudiante, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addGap(33, 33, 33)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonAddUniversidad)
                    .addComponent(jButtonAddEstudiante))
                .addGap(18, 18, 18)
                .addComponent(labelModificarEstudiante)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(153, 153, 153));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Eliminar datos existentes: ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        botonElliminarUni.setText("Eliminar Universidad");
        botonElliminarUni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonElliminarUniActionPerformed(evt);
            }
        });

        botonEliminaEstudiante.setText("Eliminar Estudiante");
        botonEliminaEstudiante.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonEliminaEstudianteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(botonElliminarUni)
                .addGap(33, 33, 33)
                .addComponent(botonEliminaEstudiante)
                .addContainerGap(41, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botonElliminarUni)
                    .addComponent(botonEliminaEstudiante))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel7.setText("Otras: ");

        botonConsulta1.setText("Consulta 1");
        botonConsulta1.setToolTipText("Nombre, apellidos, universidad e importe de matrícula de los estudiantes, ordenados por importe de la matrícula de menor a mayor.");
        botonConsulta1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonConsulta1ActionPerformed(evt);
            }
        });

        botonConsulta2.setText("Consulta 2");
        botonConsulta2.setToolTipText("Nombre de universidad y el importe ingresado por matrículas de alumnos.");
        botonConsulta2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonConsulta2ActionPerformed(evt);
            }
        });

        botonConsulta3.setText("Consulta 3");
        botonConsulta3.setToolTipText("Nombre, apellidos y dirección de todos los estudiantes de la provincia de 'ALMERIA' y que son becados.");
        botonConsulta3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonConsulta3ActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setText("Resultado de la consulta realizada: ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 425, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel8))
                                        .addGap(34, 34, 34)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jButtonListadoEstudiantes, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel2)
                                            .addComponent(jLabel7)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(botonConsulta3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(botonConsulta2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(botonConsulta1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jButtonListadoUniversidades, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 3, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(botonSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                .addComponent(jLabel8)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonListadoEstudiantes)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonListadoUniversidades)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(botonConsulta1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(botonConsulta2)
                        .addGap(11, 11, 11)
                        .addComponent(botonConsulta3))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 8, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(botonSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonListadoUniversidadesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonListadoUniversidadesActionPerformed
        //Iniciamos el método para obtener el listado de universidades
        obtenerDatosUniversidad();
    }//GEN-LAST:event_jButtonListadoUniversidadesActionPerformed

    private void jButtonListadoEstudiantesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonListadoEstudiantesActionPerformed
        //Iniciamos el método para obtener el listado de alumnos
        obtenerDatosAlumnos();
    }//GEN-LAST:event_jButtonListadoEstudiantesActionPerformed

    private void jButtonAddUniversidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddUniversidadActionPerformed
        //Iniciamos el JFrame que contiene la ventana para añadir universidad
        NuevaUniversidad formularioUni = new NuevaUniversidad();
        formularioUni.setVisible(true);

    }//GEN-LAST:event_jButtonAddUniversidadActionPerformed

    private void botonSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonSalirActionPerformed
        //Cerramos la ventana
        this.dispose();
        //Salimos 
        System.exit(0);
    }//GEN-LAST:event_botonSalirActionPerformed

    private void jButtonAddEstudianteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddEstudianteActionPerformed
        //Iniciamos el JFrame que contiene la venta para añadir estudiantes
        NuevoEstudiante formularioEstudiante = new NuevoEstudiante();
        formularioEstudiante.setVisible(true);
    }//GEN-LAST:event_jButtonAddEstudianteActionPerformed

    private void botonElliminarUniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonElliminarUniActionPerformed
        //Iniciamos el JFrame que contiene la ventana para eliminar universidades
        EliminarUniversidad ventanaEliminarUni = new EliminarUniversidad();
        ventanaEliminarUni.setVisible(true);
    }//GEN-LAST:event_botonElliminarUniActionPerformed

    private void botonEliminaEstudianteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonEliminaEstudianteActionPerformed
        //Iniciamos el JFrame que contiene la ventana para eliminar estudiantes
        EliminarEstudiante ventanaEliminarEst = new EliminarEstudiante();
        ventanaEliminarEst.setVisible(true);
    }//GEN-LAST:event_botonEliminaEstudianteActionPerformed

    private void botonConsulta2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonConsulta2ActionPerformed
        //Se ejecuta el método para iniciar la consulta 2
        realizarConsulta2();
    }//GEN-LAST:event_botonConsulta2ActionPerformed

    private void botonConsulta1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonConsulta1ActionPerformed
        //Se ejecuta el método para iniciar la consulta 1
        realizarConsulta1();
    }//GEN-LAST:event_botonConsulta1ActionPerformed

    private void botonConsulta3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonConsulta3ActionPerformed
        //Se ejecuta el método para iniciar la consulta 3
        realizarConsulta3();
    }//GEN-LAST:event_botonConsulta3ActionPerformed


    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        //Iniciamos el JFrame que contiene la ventana para modificar la matrícula
        ModificarMatricula ventanaModifMatri = new ModificarMatricula();
        ventanaModifMatri.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    //  ////////////////////////////////////////////////////////////////   //
    //                         MÉTODOS DEL PROGRAMA                        //
    //  ////////////////////////////////////////////////////////////////   //
    private void obtenerDatosUniversidad() {
        //Limpiamos el campo de texto
        jTxtResultados.setText("");
        Session session = null;
        try {
            session = HibernateUtil.getSessionFactory().openSession();
            session.beginTransaction();
            //Para hacer la consulta utilizamos el objteto Query
            Query consulta = session.createQuery("FROM Universidad");
            List resultList = consulta.list(); //obtenemos el resultado en una lista
            //Obtenemos los datos con un for-each de objetos
            jTxtResultados.append("------ LISTADO DE UNIVERSIDADES ------\n");
            for (Object o : resultList) {
                Universidad uni = (Universidad) o;
                //Añadimos los resultados al área de texto
                jTxtResultados.append("\n");
                jTxtResultados.append("-- " + uni.getNombre().toUpperCase() + " --\n");
                jTxtResultados.append("\n");
                jTxtResultados.append("Provincia: " + uni.getProvinciaUni() + "\n");
                jTxtResultados.append("Código : " + uni.getCodigo() + "\n");
                jTxtResultados.append("Privada: " + (uni.getPrivada() ? "Si" : "No" + "\n"));
                jTxtResultados.append("\n");

                //Listamos estudiantes asociados con un segundo bucle
                jTxtResultados.append("Estudiantes matriculados actualmente: \n");
                if (uni.getEstudiantes() != null && !uni.getEstudiantes().isEmpty()) {
                    for (Object esObj : uni.getEstudiantes()) {
                        Estudiante estudiante = (Estudiante) esObj;
                        jTxtResultados.append("\n  - " + estudiante.getNombre() + " " + estudiante.getApellidos() + "\n");
                    }
                } else {
                    //Si la unidad no tiene estudiantes asociados se añade el texto informándo de ello
                    jTxtResultados.append(" Sin estudiantes asociados.\n");
                }
                jTxtResultados.append("\n");
            }

            //Indicamos que todo ha terminado
            session.getTransaction().commit();
        } catch (HibernateException he) {
            System.out.println("Error Hibernate: " + he.getMessage());
        } finally {
            if (session != null) {
                session.close();
            }
        }
    }

    private void obtenerDatosAlumnos() {
        //Limpiamos el campo de texto
        jTxtResultados.setText("");
        Session session = null;
        try {
            session = HibernateUtil.getSessionFactory().openSession();
            session.beginTransaction();
            //Para hacer la consulta utilizamos el objteto Query
            Query consulta = session.createQuery("FROM Estudiante");
            List resultList = consulta.list(); //obtenemos el resultado en una lista
            //Obtenemos los datos con un for-each de objetos
            jTxtResultados.append("------ LISTADO DE ESTUDIANTES ------\n");
            for (Object o : resultList) {
                Estudiante es = (Estudiante) o;
                //Añadimos los resultados al área de texto
                jTxtResultados.append("\n");
                jTxtResultados.append("- Nombre:  " + es.getNombre() + " , " + es.getApellidos() + "\n");
                jTxtResultados.append("- Dirección: " + es.getDireccion() + "\n");
                jTxtResultados.append("- Provincia : " + es.getProvincia() + "\n");
                jTxtResultados.append("- Fecha de nacimiento: " + es.getFechaNacimiento() + "\n");
                jTxtResultados.append("- DNI: " + es.getNif() + "\n");
                jTxtResultados.append("\n");
            }

            //Indicamos que todo ha terminado
            session.getTransaction().commit();
        } catch (HibernateException hex) {
            System.out.println("Error Hibernate: " + hex.getMessage());
        } finally {
            if (session != null) {
                session.close();
            }
        }
    }

    //Este método nos permite desarrollar la siguiente consulta: 
    //Nombre, apellidos, universidad e importe de matrícula de los estudiantes, ordenados por importe de la matrícula de menor a mayor.
    //Y mostrarla en el área de texto de nuestra ventana principal
    private void realizarConsulta1() throws HibernateException {
        //Limpiamos el campo de texto
        jTxtResultados.setText("");
        Session session = null;
        //Lista de array de objetos para obtener los resultados
        List<Object[]> resultList;
        try {
            session = HibernateUtil.getSessionFactory().openSession();
            session.beginTransaction();
            String hql = "SELECT e.nombre, e.apellidos, u.nombre, e.importeMatricula FROM Universidad u, Estudiante e WHERE codigo=codigo_uni ORDER BY e.importeMatricula ASC";

            //Para hacer la consulta utilizamos el objeto Query
            Query consulta = session.createQuery(hql);
            resultList = consulta.list(); //obtenemos el resultado en una lista
            //Obtenemos los datos con la información almacenada en los índices de un array de objetos
            jTxtResultados.append("------ PAGOS ESTUDIANTES ------\n");
            for (Object[] o : resultList) {
                String nombre = (String) o[0];
                String apellidos = (String) o[1];
                String universidad = (String) o[2];
                Float importeMatricula = (Float) o[3];

                //Añadimos los resultados al área de texto
                jTxtResultados.append("\n");
                jTxtResultados.append("- Nombre:  " + nombre + " , " + apellidos + "\n");
                jTxtResultados.append("- " + universidad + "\n");
                jTxtResultados.append("Importe Matricula: " + importeMatricula.toString());
                jTxtResultados.append("\n");
            }

            //Indicamos que todo ha terminado
            session.getTransaction().commit();
        } catch (HibernateException he) {
            System.out.println("Error Hibernate: " + he.getMessage());
        } finally {
            if (session != null) {
                session.close();
            }
        }
    }

    // Método para obtener los resultados de la consulta
    // Nombre de universidad y el importe ingresado por matrículas de alumnos.
    // Y mostrarla en el área de texto de nuestra ventana principal
    private void realizarConsulta2() throws HibernateException {
        //Limpiamos el campo de texto
        jTxtResultados.setText("");
        Session session = null;
        //Lista de array de objetos para obtener los resultados
        List<Object[]> resultList;
        try {
            session = HibernateUtil.getSessionFactory().openSession();
            session.beginTransaction();
            String hql = "SELECT u.nombre, SUM(e.importeMatricula) FROM Universidad u, Estudiante e WHERE codigo=codigo_uni GROUP BY u.nombre";
            //Para hacer la consulta utilizamos el objeto Query
            Query consulta = session.createQuery(hql); //Se puede introducir la consulta que quiere hacer el usuario
            resultList = consulta.list(); //obtenemos el resultado
            //Obtenemos los datos con la información almacenada en los índices de un array de objetos
            jTxtResultados.append("------ IMPORTE TOTAL DE CADA UNIVERSIDAD ------\n");
            for (Object[] o : resultList) {
                String nombreUniversidad = (String) o[0];
                Double totalMatriculas = (Double) o[1];
                //Añadimos los resultados al área de texto
                jTxtResultados.append("\n");
                jTxtResultados.append("-- " + nombreUniversidad.toUpperCase() + " --\n");
                jTxtResultados.append("\n");
                jTxtResultados.append("Importe total de matrículas : " + totalMatriculas + "\n");
                jTxtResultados.append("\n");
            }

            //Indicamos que todo ha terminado
            session.getTransaction().commit();
        } catch (HibernateException he) {
            System.out.println("Error Hibernate: " + he.getMessage());
        } finally {
            if (session != null) {
                session.close();
            }
        }
    }

    //Método para realizar la consulta: 
    //Nombre, apellidos y dirección de todos los estudiantes de la provincia de 'ALMERIA' y que son becados.
    //Y mostrarla en el área de texto de nuestra ventana principal
    private void realizarConsulta3() throws HibernateException {
        //Limpiamos el campo de texto
        jTxtResultados.setText("");
        Session session = null;
        //Lista de array de objetos para obtener los resultados
        List<Object[]> resultList;
        try {
            session = HibernateUtil.getSessionFactory().openSession();
            session.beginTransaction();
            String hql = "SELECT e.nombre, e.apellidos, e.direccion, e.provincia FROM Estudiante e WHERE e.provincia = 'Almeria' AND e.becado = true";
            //Para hacer la consulta utilizamos el objteto Query
            Query consulta = session.createQuery(hql);
            resultList = consulta.list(); //obtenemos el resultado en una lista
            //Obtenemos los datos con la información almacenada en los índices de un array de objetos
            jTxtResultados.append("------ ESTUDIANTES BECADOS DE ALMERIA ------\n");
            for (Object[] o : resultList) {
                String nombre = (String) o[0];
                String apellidos = (String) o[1];
                String direccion = (String) o[2];
                String provincia = (String) o[3];

                //Añadimos los resultados al área de texto
                jTxtResultados.append("\n");
                jTxtResultados.append("- Nombre:  " + nombre + " , " + apellidos + "\n");
                jTxtResultados.append("- Dirección: " + direccion + "\n");
                jTxtResultados.append("- Provincia : " + provincia + "\n");
            }
            //Indicamos que todo ha terminado
            session.getTransaction().commit();
        } catch (HibernateException he) {
            System.out.println("Error Hibernate: " + he.getMessage());
        } finally {
            if (session != null) {
                session.close();
            }
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Matriculas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Matriculas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Matriculas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Matriculas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Matriculas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonConsulta1;
    private javax.swing.JButton botonConsulta2;
    private javax.swing.JButton botonConsulta3;
    private javax.swing.JButton botonEliminaEstudiante;
    private javax.swing.JButton botonElliminarUni;
    private javax.swing.JButton botonSalir;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButtonAddEstudiante;
    private javax.swing.JButton jButtonAddUniversidad;
    private javax.swing.JButton jButtonListadoEstudiantes;
    private javax.swing.JButton jButtonListadoUniversidades;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextArea jTxtResultados;
    private javax.swing.JLabel labelModificarEstudiante;
    // End of variables declaration//GEN-END:variables

}
