/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mastriculas.ui;

import java.awt.HeadlessException;
import javax.swing.JOptionPane;
import matriculas.entity.Estudiante;
import matriculas.util.HibernateUtil;
import org.hibernate.HibernateException;
import org.hibernate.Session;
import org.hibernate.Transaction;

/**
 *
 * DAM. Curso 2024-2025 Módulo: Acceso a datos. Unidad 1: Mapeo Objeto
 * Relacional.
 *
 * @author Ana Rodríguez González
 * @version 1.0 Fecha: 27-01-2025
 *
 */
public class ModificarMatricula extends javax.swing.JFrame {

    /**
     * Creates new form ModificarMatricula
     */
    public ModificarMatricula() {
        initComponents();
        //Centra la ventana
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        botonAceptar = new javax.swing.JButton();
        botonCancelar = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabelNIF = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        campoNIF = new javax.swing.JTextField();
        campoNuevoImporte = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        botonAceptar.setText("Aceptar");
        botonAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAceptarActionPerformed(evt);
            }
        });

        botonCancelar.setText("Cancelar");
        botonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCancelarActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Modificar importe de matrícula de un alumno: ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        jLabelNIF.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabelNIF.setText("Indique el NIF del estudiante");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("Indique el nuevo importe: ");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(134, 134, 134)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(52, 52, 52)
                        .addComponent(campoNuevoImporte))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabelNIF)
                        .addGap(39, 39, 39)
                        .addComponent(campoNIF, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE)))
                .addGap(49, 49, 49))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelNIF)
                    .addComponent(campoNIF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(campoNuevoImporte, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(30, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(botonAceptar)
                        .addGap(18, 18, 18)
                        .addComponent(botonCancelar)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botonAceptar)
                    .addComponent(botonCancelar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCancelarActionPerformed
        // Cerramos la ventana
        this.dispose();
    }//GEN-LAST:event_botonCancelarActionPerformed

    private void botonAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAceptarActionPerformed
        //Se ejecuta el método para modificar el importe de la matrícula
        modificarMatricula();

    }//GEN-LAST:event_botonAceptarActionPerformed

    //  ////////////////////////////////////////////////////////////////   //
    //                         MÉTODOS DEL PROGRAMA                        //
    //  ////////////////////////////////////////////////////////////////   //
    //Este método nos permite modificar el importe de matrícula de un estudiante indicándo su NIF
    //y el nuevo importe. 
    private void modificarMatricula() throws HibernateException, HeadlessException {
        Session session = null;
        Transaction transaction = null;
        Float nuevoValor = null;
        //Obtenemos el valor de los campos
        String importeStr = campoNuevoImporte.getText().trim();
        String estudianteNIF = campoNIF.getText().trim();

        try {
            nuevoValor = Float.parseFloat(importeStr); //Convertimos a Float el texto introducido como importe
        } catch (NumberFormatException e) {
            //Si el valor no es un número saltará una excepción con un mensaje
            JOptionPane.showMessageDialog(this, "Por favor, ingrese un número válido.");
        }
        if (campoNIF.getText().equals("") || campoNuevoImporte.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Debes de rellenar TODOS los campos");
        } else {
            //Si tanto el NIF como el importe introducido son válidos
            //Actualizamos el estudiante obtenido
            try {
                //Abrimos sesión er iniciamos la transacción
                session = HibernateUtil.getSessionFactory().openSession();
                transaction = session.beginTransaction();

                //Recuperamos de la base de datos el estudiante cuya clave corresponde con el NIF introducido
                Estudiante estudianteActualizar = (Estudiante) session.get(Estudiante.class, estudianteNIF);
                if (estudianteActualizar == null) {
                    JOptionPane.showMessageDialog(this, "No existe ninguna estudiante con NIF: " + estudianteNIF);
                } else { //Si el estudiante obtenido no es null
                    //Actualizamos el importe del alumno
                    estudianteActualizar.setImporteMatricula(nuevoValor);
                    //Confirmamos la transacción
                    transaction.commit();
                    //Informamos al usuario
                    JOptionPane.showMessageDialog(this, "Importe de matrícula modificado.");
                }

            } catch (HibernateException he) {
                System.out.println("Error Hibernate: " + he.getMessage());
                if (transaction != null) {
                    transaction.rollback(); //Deshacemos los cambios en caso de error
                }
                JOptionPane.showMessageDialog(this, "Error al actualizar el importe de matrícula.");
            } finally {
                if (session != null) {
                    session.close(); //Cerramos la sesión                
                }

            }
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ModificarMatricula.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ModificarMatricula.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ModificarMatricula.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ModificarMatricula.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ModificarMatricula().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonAceptar;
    private javax.swing.JButton botonCancelar;
    private javax.swing.JTextField campoNIF;
    private javax.swing.JTextField campoNuevoImporte;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelNIF;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
